import java.util.HashMap;

public class Data {
    private HashMap<String, Double> otherCountry;
    private HashMap<String, HashMap<String, Double>> specialCountry;
    //  HashMap
    public Data() {
        otherCountry = new HashMap<>();
        specialCountry = new HashMap<>();
        //otherCountry.put("Zimbabwe", 2.0); 
        otherCountry.put("Zimbabwe", 2.0);
        otherCountry.put("Zambia",2.0 );
        otherCountry.put("Yemen", 3.0);
        otherCountry.put("Vietnam", 7.0);
        otherCountry.put("Venezuela", -4.0);
        otherCountry.put("Vatican City",1.0 );
        otherCountry.put("Vanuatu", 11.0);
        otherCountry.put("Uzbekistan", 5.0);
        otherCountry.put("Uruguay", -3.0);
        otherCountry.put("United Arab Emirates", 4.0);
        otherCountry.put("Ukraine", 2.0);
        otherCountry.put("Uganda", 3d);
        otherCountry.put("Tuvalu", 12d);
        otherCountry.put("Turkmenistan", 5d);
        otherCountry.put("Turkey", 3d);
        otherCountry.put("Tunisia", 1d);
        otherCountry.put("Trinidad and Tobago", -4d);
        otherCountry.put("Tonga", 13d);
        otherCountry.put("Togo", 0d);
        otherCountry.put("Thailand", 7d);
        otherCountry.put("Tanzania", 3d);
        otherCountry.put("Tajikistan", 5d);
        otherCountry.put("Taiwan", 8d);
        otherCountry.put("Syria", 3d);
        otherCountry.put("Switzerland", 1d);
        otherCountry.put("Sweden", 1d);
        otherCountry.put("Suriname", -3d);
        otherCountry.put("Sudan", 2d);
        otherCountry.put("Sri Lanka", 5.5);
        otherCountry.put("South Sudan", 2d);
        otherCountry.put("Somalia", 3d);
        otherCountry.put("Solomon Islands", 11d);
        otherCountry.put("Slovenia", 1d);
        otherCountry.put("Slovakia", 1d);
        otherCountry.put("Singapore", 8d);
        otherCountry.put("Sierra Leone", 0d);
        otherCountry.put("Seychelles", 4d);
        otherCountry.put("Serbia", 1d);
        otherCountry.put("Senegal", 0d);
        otherCountry.put("Saudi Arabia", 3d);
        otherCountry.put("São Tomé and Príncipe", 0d);
        otherCountry.put("San Marino", 1d);
        otherCountry.put("Samoa", 13d);
        otherCountry.put("Saint Vincent and the Grenadines", -4d);
        otherCountry.put("Saint Lucia", -4d);
        otherCountry.put("Saint Kitts and Nevis", -4d);
        otherCountry.put("Rwanda", 2d);
        otherCountry.put("Romania", 2d);
        otherCountry.put("Qatar", 3d);
        otherCountry.put("Poland", 1d);
        otherCountry.put("Philippines", 8d);
        otherCountry.put("Peru", -5d);
        otherCountry.put("Paraguay", -4d);
        otherCountry.put("Panama", -5d);
        otherCountry.put("Palestine", 2d);
        otherCountry.put("Palau", 9d);
        otherCountry.put("Pakistan", 5d);
        otherCountry.put("Oman", 4d);
        otherCountry.put("Norway", 1d);
        otherCountry.put("North Macedonia", 1d);
        otherCountry.put("Nigeria", 1d);
        otherCountry.put("Niger", 1d);
        otherCountry.put("Nicaragua", -6d);
        otherCountry.put("Nepal", 5.75d);
        otherCountry.put("Nauru", 12d);
        otherCountry.put("Namibia", 2d);
        otherCountry.put("Myanmar", 6.5d);
        otherCountry.put("Mozambique", 2d);
        otherCountry.put("Morocco", 1d);
        otherCountry.put("Montenegro", 1d);
        otherCountry.put("Monaco", 1d);
        otherCountry.put("Moldova", 2d);
        otherCountry.put("Mauritius", 4d);
        otherCountry.put("Mauritania", 0d);
        otherCountry.put("Marshall Islands", 12d);
        otherCountry.put("Malta", 1d);
        otherCountry.put("Mali", 0d);
        otherCountry.put("Maldives", 5d);
        otherCountry.put("Malaysia", 8d);
        otherCountry.put("Malawi", 2d);
        otherCountry.put("Madagascar", 3d);
        otherCountry.put("Macau", 8d);
        otherCountry.put("Luxembourg", 1d);
        otherCountry.put("Lithuania", 2d);
        otherCountry.put("Liechtenstein", 1d);
        otherCountry.put("Libya", 2d);
        otherCountry.put("Liberia", 0d);
        otherCountry.put("Lesotho", 2d);
        otherCountry.put("Lebanon", 2d);
        otherCountry.put("Latvia", 2d);
        otherCountry.put("Laos", 7d);
        otherCountry.put("Kyrgyzstan", 6d);
        otherCountry.put("Kuwait", 3d);
        otherCountry.put("South Korea", 9d);
        otherCountry.put("North Korea", 9d);
        otherCountry.put("Kenya", 3d);
        otherCountry.put("Kazakhstan", 5d);
        otherCountry.put("Jordan", 3d);
        otherCountry.put("Japan", 9d);
        otherCountry.put("Jamaica", -5d);
        otherCountry.put("Ivory Coast", 0d);
        otherCountry.put("Italy", 1d);
        otherCountry.put("Israel", 2d);
        otherCountry.put("Ireland", 0d);
        otherCountry.put("Iraq", 3d);
        otherCountry.put("Iran", 3.5d);
        otherCountry.put("India", 5.5d);
        otherCountry.put("Iceland", 0d);
        otherCountry.put("Hungary", 1d);
        otherCountry.put("Hong Kong", 8d);
        otherCountry.put("Honduras", -6d);
        otherCountry.put("Haiti", -5d);
        otherCountry.put("Guyana", -4d);
        otherCountry.put("Guinea-Bissau", 0d);
        otherCountry.put("Guinea", 0d);
        otherCountry.put("Guatemala", -6d);
        otherCountry.put("Grenada", -4d);
        otherCountry.put("Greece", 2d);
        otherCountry.put("Ghana", 0d);
        otherCountry.put("Germany", 1d);
        otherCountry.put("Georgia", 4d);
        otherCountry.put("Gambia", 0d);
        otherCountry.put("Gabon", 1d);
        otherCountry.put("Finland", 2d);
        otherCountry.put("Fiji", 12d);
        otherCountry.put("Ethiopia", 3d);
        otherCountry.put("Eswatini", 2d);
        otherCountry.put("Estonia", 2d);
        otherCountry.put("Eritrea", 3d);
        otherCountry.put("Equatorial Guinea", 1d);
        otherCountry.put("El Salvador", -6d);
        otherCountry.put("Egypt", 2d);
        otherCountry.put("East Timor", 9d);
        otherCountry.put("Dominican Republic", -4d);
        otherCountry.put("Dominica", -4d);
        otherCountry.put("Djibouti", 3d);
        otherCountry.put("Czech Republic", 1d);
        otherCountry.put("Cyprus", 2d);
        otherCountry.put("Cuba", -5d);
        otherCountry.put("Croatia", 1d);
        otherCountry.put("Costa Rica", -6d);
        otherCountry.put("Republic of the Congo", 1d);
        otherCountry.put("Comoros", 3d);
        otherCountry.put("Colombia", -5d);
        otherCountry.put("China", 8d);
        otherCountry.put("Chad", 1d);
        otherCountry.put("Central African Republic",1d);
        otherCountry.put("Cape Verde", -1d);
        otherCountry.put("Cameroon", 1d);
        otherCountry.put("Cambodia", 7d);
        otherCountry.put("Burundi", 2d);
        otherCountry.put("Burkina Faso", 0d);
        otherCountry.put("Bulgaria", 2d);
        otherCountry.put("Brunei", 8d);
        otherCountry.put("Botswana", 2d);
        otherCountry.put("Bosnia and Herzegovina", 1d);
        otherCountry.put("Bolivia", -4d);
        otherCountry.put("Bhutan", 6d);
        otherCountry.put("Benin", 1d);
        otherCountry.put("Belize", -6d);
        otherCountry.put("Belgium", 1d);
        otherCountry.put("Belarus", 3d);
        otherCountry.put("Barbados", -4d);
        otherCountry.put("Bangladesh", 6d);
        otherCountry.put("Bahrain", 3d);
        otherCountry.put("Bahamas", -5d);
        otherCountry.put("Azerbaijan", 4d);
        otherCountry.put("Austria", 1d);
        otherCountry.put("Armenia", 4d);
        otherCountry.put("Argentina", -3d);
        otherCountry.put("Antigua and Barbuda", -4d);
        otherCountry.put("Angola", 1d);
        otherCountry.put("Andorra", 1d);
        otherCountry.put("Algeria", 1d);
        otherCountry.put("Albania", 1d);
        otherCountry.put("Afghanistan", 4.5);

        HashMap<String, Double> Spain = new HashMap<> ();
        Spain.put("Main territory of Spain", 1d);
        Spain.put("Canary Islands", 0d);
        specialCountry.put("Spain", Spain);
        HashMap<String, Double> South_Africa = new HashMap<> ();
        South_Africa.put("Main territory of South Africa", 2d);
        South_Africa.put(" Prince Edward Islands", 3d);
        specialCountry.put("South Africa", South_Africa);
        HashMap<String, Double> Portugal = new HashMap<> ();
        Portugal.put("Azores", -1d);
        Portugal.put("Madeira and the Main territory of Portugal", 0d);
        specialCountry.put("Portugal", Portugal);
        HashMap<String, Double> Papua_New_Guinea = new HashMap<> ();
        Papua_New_Guinea.put("Most of the country", 10d);
        Papua_New_Guinea.put("Autonomous Region of Bougainville", 11d);
        specialCountry.put("Papua New Guinea", Papua_New_Guinea);
        HashMap<String, Double> Mongolia = new HashMap<> ();
        Mongolia.put("Provinces of Khovd, Uvs and Bayan-Ölgii", 7d);
        Mongolia.put("Most of the country", 8d);
        specialCountry.put("Mongolia", Mongolia);
        HashMap<String, Double> Kingdom_of_the_Netherlands = new HashMap<> ();
        Kingdom_of_the_Netherlands.put("Caribbean municipalities and constituent countries", -4d);
        Kingdom_of_the_Netherlands.put("Main territory of the Netherlands", 1d);
        specialCountry.put("Kingdom of the Netherlands", Kingdom_of_the_Netherlands);
        HashMap<String, Double> Federated_States_of_Micronesia = new HashMap<> ();
        Federated_States_of_Micronesia.put("States of Chuuk and Yap", 10d);
        Federated_States_of_Micronesia.put("States of Kosrae and Pohnpei", 11d);
        specialCountry.put("Federated States of Micronesia", Federated_States_of_Micronesia);
        HashMap<String, Double> Ecuador = new HashMap<> ();
        Ecuador.put("Galápagos Province", -6d);
        Ecuador.put("Main territory of Ecuador", -5d);
        specialCountry.put("Ecuador", Ecuador);
        HashMap<String, Double> Democratic_Republic_of_the_Congo = new HashMap<> ();
        Democratic_Republic_of_the_Congo.put("Provinces of Équateur, Kinshasa, Kongo Central, Kwango, Kwilu, Mai-Ndombe, Mongala, Nord-Ubangi, Sud-Ubangi and Tshuapa", 1d);
        Democratic_Republic_of_the_Congo.put("Provinces of Bas-Uele, Haut-Katanga, Haut-Lomami, Haut-Uele, Kasaï, Kasaï-Central, Kasaï Oriental, Lomami, Lualaba, Maniema, Nord-Kivu, Sankuru, Sud-Kivu, Tanganyika, Tshopo and Ituri Interim Administration", 2d);
        specialCountry.put("Democratic Republic of the Congo", Democratic_Republic_of_the_Congo);
        HashMap<String, Double> Kiribati = new HashMap<> ();
        Kiribati.put("Gilbert Islands", 12d);
        Kiribati.put("Phoenix Islands", 13d);
        Kiribati.put("Line Islands", 14d);
        specialCountry.put("Kiribati", Kiribati);
        HashMap<String, Double> Indonesia = new HashMap<> ();
        Indonesia.put("Islands of Sumatra, Java, Madura, provinces of Bangka Belitung Islands, Riau Islands, West Kalimantan and Central Kalimantan", 7d);
        Indonesia.put("Islands of Sulawesi, Bali, provinces of East Nusa Tenggara, West Nusa Tenggara, East Kalimantan, North Kalimantan and South Kalimantan", 8d);
        Indonesia.put("Islands of Maluku Islands and Western New Guinea", 9d);
        specialCountry.put("Indonesia", Indonesia);
        HashMap<String, Double> Chile = new HashMap<> ();
        Chile.put("Easter Island", -6d);
        Chile.put("Main territory of Chile", -4d);
        Chile.put("Magallanes and Chilean Antarctica", -3d);
        specialCountry.put("Chile", Chile);
        HashMap<String, Double> Mexico = new HashMap<> ();
        Mexico.put("State of Baja California", -8d);
        Mexico.put("States of Baja California Sur, Chihuahua, Nayarit, Sinaloa and Sonora", -7d);
        Mexico.put("Most of Mexico", -6d);
        Mexico.put("State of Quintana Roo", -5d);
        specialCountry.put("Mexico", Mexico);
        HashMap<String, Double> Brazil = new HashMap<> ();
        Brazil.put("Acre and Southwestern Amazonas", -5d);
        Brazil.put("Most part of the Amazonas State, Mato Grosso, Mato Grosso do Sul, Rondônia, Roraima", -4d);
        Brazil.put("The Southeast Region, the South Region, the Northeast Region (except some islands), Goiás, Distrito Federal, Tocantins, Pará, Amapá", -3d);
        Brazil.put("Fernando de Noronha, Trindade and Martim Vaz, Rocas Atoll, Saint Peter and Saint Paul Archipelago", -2d);
        specialCountry.put("Brazil", Brazil);
        HashMap<String, Double> New_Zealand = new HashMap<> ();
        New_Zealand.put("Niue", -11d);
        New_Zealand.put("Cook Islands", -10d);
        New_Zealand.put("Main territory of New Zealand", 12d);
        New_Zealand.put("Chatham Islands", 12.75d);
        New_Zealand.put("Tokelau", 13d);
        specialCountry.put("New Zealand", New_Zealand);
        HashMap<String, Double> Denmark = new HashMap<> ();
        Denmark.put("Pituffik Space Base in Greenland", -4d);
        Denmark.put("Most of Greenland, including inhabited south coast and west coast", -3d);
        Denmark.put("Ittoqqortoormiit and surrounding area in Greenland's Tunu county", -1d);
        Denmark.put("Danmarkshavn weather station and surrounding area in Greenland's Tunu county, Faroe Islands", 0d);
        Denmark.put("Main territory of Denmark", 1d);
        specialCountry.put("Denmark", Denmark);
        HashMap<String, Double> Canada = new HashMap<> ();
        Canada.put("Labrador (southeastern), Newfoundland", -3.5);
        Canada.put("Labrador (all but southeastern tip), New Brunswick, Nova Scotia, Prince Edward Island, eastern part of Quebec",-4d );
        Canada.put("Nunavut east of 85°W and entire Southampton Island, Ontario east of 90°W (except Big Trout Lake area) plus several more western areas, Quebec (most of province)",-5d );
        Canada.put("Manitoba, Nunavut (between 85° West and 102°W except western Southampton Island), Ontario (Northwestern Ontario west of 90°W with some exceptions and Big Trout Lake area east of 90°W), Saskatchewan except Lloydminster",-6d );
        Canada.put("Alberta, some eastern parts of British Columbia, most of Northwest Territories, Nunavut (west of 102°W and all communities in the Kitikmeot Region), Lloydminster and surrounding area in Saskatchewan", -7d);
        Canada.put("Larger western part of British Columbia, Tungsten and the associated Cantung Mine in Northwest Territories, Yukon", -8d);
        specialCountry.put("Canada", Canada);
        HashMap<String, Double> United_Kingdom = new HashMap<> ();
        United_Kingdom.put("British Indian Ocean Territory", 6d);
        United_Kingdom.put("Akrotiri and Dhekelia", 2d);
        United_Kingdom.put("Gibraltar", 1d);
        United_Kingdom.put("Main territory of the United Kingdom, Saint Helena, Ascension and Tristan da Cunha, Guernsey, Isle of Man, Jersey", 0d);
        United_Kingdom.put("South Georgia and the South Sandwich Islands", -2d);
        United_Kingdom.put("Falkland Islands", -3d);
        United_Kingdom.put("Anguilla, Bermuda, British Virgin Islands, Montserrat", -4d);
        United_Kingdom.put("Cayman Islands, Turks and Caicos Islands", -5d);
        United_Kingdom.put("Pitcairn Islands", -8d);
        specialCountry.put("United Kingdom", United_Kingdom);
        HashMap<String, Double> Australia = new HashMap<> ();
        Australia.put("Norfolk Island",11d);
        Australia.put("Lord Howe Island",10.5);
        Australia.put("Queensland, New South Wales, Australian Capital Territory, Victoria, Tasmania",10d);
        Australia.put("South Australia, Northern Territory, New South Wales (Yancowinna County)",9.5);
        Australia.put("South Australia (Border Village), Western Australia (Caiguna, Cocklebiddy, Eucla, Madura, Mundrabilla)",8.75);
        Australia.put("Western Australia, Indian Pacific railway when travelling between Port Augusta, South Australia and Kalgoorlie, Western Australia)",8d);
        Australia.put("Christmas Island",7d);
        Australia.put("Cocos (Keeling) Islands",6.5);
        Australia.put("Heard and McDonald Islands",5d);
        specialCountry.put("Australia", Australia);
        HashMap<String, Double> Antarctica = new HashMap<> ();
        Antarctica.put("McMurdo Station, Amundsen–Scott South Pole Station",12d);
        Antarctica.put("Casey Station",11d);
        Antarctica.put("Dumont-d'Urville Station",10d);
        Antarctica.put("Casey Station",8d);
        Antarctica.put("Davis Station",7d);
        Antarctica.put("Vostok Station",6d);
        Antarctica.put("Mawson Station",5d);
        Antarctica.put("Syowa Station",3d);
        Antarctica.put("Troll Station",0d);
        Antarctica.put("Palmer Station, Rothera Station",-3d);
        specialCountry.put("Antarctica", Antarctica);
        HashMap<String, Double> United_States = new HashMap<> ();
        United_States.put("Baker Island and Howland Island",-12d);
        United_States.put("American Samoa, Jarvis Island, Kingman Reef, Midway Atoll and Palmyra Atoll",-11d);
        United_States.put("Hawaii, most of the Aleutian Islands, and Johnston Atoll",-10d);
        United_States.put("Most of the state of Alaska",-9d);
        United_States.put("Pacific Time zone: the Pacific coast states, the Idaho Panhandle and most of Nevada and Oregon",-8d);
        United_States.put("Mountain Time zone: most of Idaho, part of Oregon, and the Mountain states plus western parts of some adjacent states",-7d);
        United_States.put("Central Time zone: a large area spanning from the Gulf Coast to the Great Lakes",-6d);
        United_States.put(" Eastern Time zone: roughly a triangle covering all the states from the Great Lakes down to Florida and east to the Atlantic coast",-5d);
        United_States.put("Puerto Rico, the U.S. Virgin Islands",-4d);
        United_States.put("Guam and the Northern Mariana Islands",10d);
        United_States.put("Wake Island",12d);
        specialCountry.put("United States", United_States);
        HashMap<String, Double> Russia = new HashMap<> ();
        Russia.put("Kaliningrad Oblast", 2d);
        Russia.put("Most of European Russia", 3d);
        Russia.put("Astrakhan Oblast, Samara Oblast, Saratov Oblast, Udmurtia, and Ulyanovsk Oblast", 4d);
        Russia.put("Bashkortostan, Chelyabinsk Oblast, Khanty–Mansia, Kurgan Oblast, Orenburg Oblast, Perm Krai, Sverdlovsk Oblast, Tyumen Oblast, and Yamalia", 5d);
        Russia.put("Omsk Oblast", 6d);
        Russia.put("Altai Krai, Altai Republic, Kemerovo Oblast, Khakassia, Krasnoyarsk Krai, Novosibirsk Oblast, Tomsk Oblast, and Tuva", 7d);
        Russia.put("Buryatia and Irkutsk Oblast", 8d);
        Russia.put("Amur Oblast, western Sakha Republic, and Zabaykalsky Krai", 9d);
        Russia.put("Jewish Autonomous Oblast, Khabarovsk Krai, Primorsky Krai, and central Sakha Republic", 10d);
        Russia.put("Magadan Oblast, eastern Sakha, and Sakhalin Oblast", 11d);
        Russia.put("Chukotka and Kamchatka Krai", 12d);
        specialCountry.put("Russia", Russia);
        HashMap<String, Double> France = new HashMap<> ();
        France.put("Society Islands, Tuamotus, Austral Islands", -10d);
        France.put("Marquesas Islands", -9.5d);
        France.put("Gambier Islands", -9d);
        France.put("Clipperton Island", -8d);
        France.put("Guadeloupe, Martinique, Saint Barthélemy, Saint Martin", -4d);
        France.put("French Guiana, Saint Pierre and Miquelon", -3d);
        France.put("Metropolitan France", 1d);
        France.put("Mayotte, Scattered Islands in the Indian Ocean", 3d);
        France.put("Réunion, Crozet Islands", 4d);
        France.put("Kerguelen Islands, Saint Paul and Amsterdam Islands", 5d);
        France.put("New Caledonia", 11d);
        France.put("Wallis and Futuna", 12d);
        specialCountry.put("France", France);
    }

    //  HashMap
    public HashMap<String, Double> getOtherCountry() {
        return otherCountry;
    }
    public HashMap<String, HashMap<String, Double>> getSpecialCountry() {
        return specialCountry;
    }
}
